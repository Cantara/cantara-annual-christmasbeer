// Code generated by templ@v0.2.364 DO NOT EDIT.

package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/gofrs/uuid"
	"strconv"
)

type accountData struct {
	name    string
	id      uuid.UUID
	ratings int
	weight  float32
}

func myFunction(this any, id string) templ.ComponentScript {
	return templ.ComponentScript{
		Name:     `__templ_myFunction_e480`,
		Function: `function __templ_myFunction_e480(this, id){myFunction(this, id)}`,
		Call:     templ.SafeScript(`__templ_myFunction_e480`, this, id),
	}
}

func admin(accounts []accountData) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><title>")
		if err != nil {
			return err
		}
		var_2 := `CaCBt`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</title><script defer type=\"text/javascript\" src=\"static/search.js\">")
		if err != nil {
			return err
		}
		var_3 := ``
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script><link rel=\"icon\" type=\"image/png\" href=\"static/favicon.png\"><link rel=\"stylesheet\" href=\"static/styles.css\"></head><body><img id=\"bg\" src=\"static/beer-texture-highress.jpg\"><main><section><input type=\"text\" id=\"myInput\" onkeyup=\"search()\" placeholder=\"Search for names..\"><table id=\"myTable\"><tr class=\"header\"><th style=\"width:65%;\">")
		if err != nil {
			return err
		}
		var_4 := `Name`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th style=\"width:15%;\">")
		if err != nil {
			return err
		}
		var_5 := `Num`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th style=\"width:20%;\">")
		if err != nil {
			return err
		}
		var_6 := `Status`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th></tr>")
		if err != nil {
			return err
		}
		for _, account := range accounts {
			_, err = templBuffer.WriteString("<tr><td>")
			if err != nil {
				return err
			}
			var var_7 string = account.name
			_, err = templBuffer.WriteString(templ.EscapeString(var_7))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td><td>")
			if err != nil {
				return err
			}
			var var_8 string = strconv.Itoa(account.ratings)
			_, err = templBuffer.WriteString(templ.EscapeString(var_8))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td><td>")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<select onchange=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("myFunction(this, '")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(account.id.String())
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("')\"><option value=\"1\"")
			if err != nil {
				return err
			}
			if account.weight == 1.0 {
				_, err = templBuffer.WriteString(" selected")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString(">")
			if err != nil {
				return err
			}
			var_10 := `Veteran`
			_, err = templBuffer.WriteString(var_10)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</option><option value=\"0.5\"")
			if err != nil {
				return err
			}
			if account.weight == 0.5 {
				_, err = templBuffer.WriteString(" selected")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString(">")
			if err != nil {
				return err
			}
			var_11 := `Newbie`
			_, err = templBuffer.WriteString(var_11)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</option><option value=\"0\"")
			if err != nil {
				return err
			}
			if account.weight == 0.0 {
				_, err = templBuffer.WriteString(" selected")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString(">")
			if err != nil {
				return err
			}
			var_12 := `Failed`
			_, err = templBuffer.WriteString(var_12)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</option></select></td></tr>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</table></section></main></body></html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
